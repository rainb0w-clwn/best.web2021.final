{"ast":null,"code":"var _jsxFileName = \"/home/darrrks/WebstormProjects/test_proj/lol_front/src/components/Simulation/SystemRelatedActions.jsx\";\nimport React, { useMemo, useCallback } from 'react';\nimport { Row, Col, Button, Form } from 'react-bootstrap';\nimport { filter as _filter } from 'lodash';\nimport { view } from '@risingstack/react-easy-state';\nimport { useStaticData } from '../StaticDataProvider';\nimport { gameStore } from '../GameStore';\nimport { numberToUsd } from '../../util';\nconst SystemRelatedActions = view(({\n  location,\n  className\n}) => {\n  const {\n    budget,\n    mitigations: gameMitigations,\n    systems: gameSystems,\n    popError,\n    closeError,\n    actions: {\n      restoreSystem\n    }\n  } = gameStore;\n  const {\n    responses,\n    systems\n  } = useStaticData();\n  const systemRealtedActions = useMemo(() => _filter(responses, ({\n    systems_to_restore,\n    required_mitigation,\n    required_mitigation_type,\n    location: responseLocation\n  }) => // has system to restore\n  (systems_to_restore === null || systems_to_restore === void 0 ? void 0 : systems_to_restore.length) && ( // location type matches\n  !location || responseLocation === location) && // restorable system is down\n  systems_to_restore.some(key => !gameSystems[key]) && ( // required mitigation met\n  !required_mitigation_type || !required_mitigation || (required_mitigation_type === 'party' ? gameMitigations[`${required_mitigation}_hq`] && gameMitigations[`${required_mitigation}_local`] : gameMitigations[`${required_mitigation}_${required_mitigation_type}`]))), [responses, gameMitigations, gameSystems, location]);\n  const submitAction = useCallback(event => {\n    var _event$target, _event$target$systemR;\n\n    event.preventDefault();\n    event.stopPropagation();\n    const isValid = event.target.checkValidity() && ((_event$target = event.target) === null || _event$target === void 0 ? void 0 : (_event$target$systemR = _event$target.systemRealtedActions) === null || _event$target$systemR === void 0 ? void 0 : _event$target$systemR.value);\n\n    if (isValid) {\n      closeError();\n      restoreSystem({\n        responseId: event.target.systemRealtedActions.value\n      });\n    } else {\n      popError('Please select an action.');\n    }\n  }, [popError, closeError, restoreSystem]);\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitAction,\n    noValidate: true,\n    id: \"system_actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"ACTIONS RELATED TO TECHNICAL SYSTEMS:\")), /*#__PURE__*/React.createElement(Col, {\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-primary\",\n    className: \"rounded-pill w-100\",\n    type: \"submit\",\n    disabled: !systemRealtedActions.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"PERFORM ACTION\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, systemRealtedActions.length ? systemRealtedActions.map(action => /*#__PURE__*/React.createElement(Form.Check, {\n    custom: true,\n    required: true,\n    type: \"radio\",\n    className: \"custom-radio-right\",\n    key: action.id,\n    label: /*#__PURE__*/React.createElement(Row, {\n      className: \"py-1 select-row align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 23\n      }\n    }, `${action.description} (Restores:${action.systems_to_restore.map(systemId => ` ${systems[systemId].name}`)})`), /*#__PURE__*/React.createElement(Col, {\n      xs: 2,\n      className: \"justify-content-end d-flex align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 23\n      }\n    }, numberToUsd(action.cost))),\n    name: \"systemRealtedActions\",\n    disabled: budget < action.cost,\n    id: action.id,\n    value: action.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  })) : 'No system related action is available.')));\n});\nexport default SystemRelatedActions;","map":{"version":3,"sources":["/home/darrrks/WebstormProjects/test_proj/lol_front/src/components/Simulation/SystemRelatedActions.jsx"],"names":["React","useMemo","useCallback","Row","Col","Button","Form","filter","_filter","view","useStaticData","gameStore","numberToUsd","SystemRelatedActions","location","className","budget","mitigations","gameMitigations","systems","gameSystems","popError","closeError","actions","restoreSystem","responses","systemRealtedActions","systems_to_restore","required_mitigation","required_mitigation_type","responseLocation","length","some","key","submitAction","event","preventDefault","stopPropagation","isValid","target","checkValidity","value","responseId","map","action","id","description","systemId","name","cost"],"mappings":"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","sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport { Row, Col, Button, Form } from 'react-bootstrap';\nimport { filter as _filter } from 'lodash';\nimport { view } from '@risingstack/react-easy-state';\n\nimport { useStaticData } from '../StaticDataProvider';\nimport { gameStore } from '../GameStore';\nimport { numberToUsd } from '../../util';\n\nconst SystemRelatedActions = view(({ location, className }) => {\n  const {\n    budget,\n    mitigations: gameMitigations,\n    systems: gameSystems,\n    popError,\n    closeError,\n    actions: { restoreSystem },\n  } = gameStore;\n  const { responses, systems } = useStaticData();\n\n  const systemRealtedActions = useMemo(\n    () =>\n      _filter(\n        responses,\n        ({\n          systems_to_restore,\n          required_mitigation,\n          required_mitigation_type,\n          location: responseLocation,\n        }) =>\n          // has system to restore\n          systems_to_restore?.length &&\n          // location type matches\n          (!location || responseLocation === location) &&\n          // restorable system is down\n          systems_to_restore.some((key) => !gameSystems[key]) &&\n          // required mitigation met\n          (!required_mitigation_type ||\n            !required_mitigation ||\n            (required_mitigation_type === 'party'\n              ? gameMitigations[`${required_mitigation}_hq`] &&\n                gameMitigations[`${required_mitigation}_local`]\n              : gameMitigations[\n                  `${required_mitigation}_${required_mitigation_type}`\n                ])),\n      ),\n    [responses, gameMitigations, gameSystems, location],\n  );\n\n  const submitAction = useCallback(\n    (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      const isValid =\n        event.target.checkValidity() &&\n        event.target?.systemRealtedActions?.value;\n      if (isValid) {\n        closeError();\n        restoreSystem({\n          responseId: event.target.systemRealtedActions.value,\n        });\n      } else {\n        popError('Please select an action.');\n      }\n    },\n    [popError, closeError, restoreSystem],\n  );\n\n  return (\n    <Form onSubmit={submitAction} noValidate id=\"system_actions\">\n      <Row className={className}>\n        <Col xs={9}>\n          <h2 className=\"font-weight-bold\">\n            ACTIONS RELATED TO TECHNICAL SYSTEMS:\n          </h2>\n        </Col>\n        <Col xs={3}>\n          <Button\n            variant=\"outline-primary\"\n            className=\"rounded-pill w-100\"\n            type=\"submit\"\n            disabled={!systemRealtedActions.length}\n          >\n            PERFORM ACTION\n          </Button>\n        </Col>\n        <Col>\n          {systemRealtedActions.length\n            ? systemRealtedActions.map((action) => (\n                <Form.Check\n                  custom\n                  required\n                  type=\"radio\"\n                  className=\"custom-radio-right\"\n                  key={action.id}\n                  label={\n                    <Row className=\"py-1 select-row align-items-center\">\n                      <Col xs={10}>\n                        {`${\n                          action.description\n                        } (Restores:${action.systems_to_restore.map(\n                          (systemId) => ` ${systems[systemId].name}`,\n                        )})`}\n                      </Col>\n                      <Col\n                        xs={2}\n                        className=\"justify-content-end d-flex align-items-center\"\n                      >\n                        {numberToUsd(action.cost)}\n                      </Col>\n                    </Row>\n                  }\n                  name=\"systemRealtedActions\"\n                  disabled={budget < action.cost}\n                  id={action.id}\n                  value={action.id}\n                />\n              ))\n            : 'No system related action is available.'}\n        </Col>\n      </Row>\n    </Form>\n  );\n});\n\nexport default SystemRelatedActions;\n"]},"metadata":{},"sourceType":"module"}