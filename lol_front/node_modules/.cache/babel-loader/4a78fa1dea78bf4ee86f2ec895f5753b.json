{"ast":null,"code":"var _jsxFileName = \"/home/darrrks/WebstormProjects/test_proj/lol_front/src/components/EventLogs/Log.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Accordion, Card, Row, Col } from 'react-bootstrap';\nimport { AiOutlineDown } from 'react-icons/ai';\nimport { accordionOpeners } from './EventLogs';\n\nconst SimpleLog = ({\n  title\n}) => /*#__PURE__*/React.createElement(Card, {\n  className: \"border-primary injection my-4\",\n  style: {\n    borderRadius: '1rem',\n    overflow: 'hidden'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Card.Header, {\n  className: \"py-3 bg-white border-bottom-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Row, {\n  className: \"align-items-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Col, {\n  xs: 12,\n  className: \"font-weight-bold\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }\n}, title))));\n\nconst ToggleHeader = ({\n  title,\n  changeIsOpen,\n  isOpen\n}) => /*#__PURE__*/React.createElement(Card.Header, {\n  className: \"cursor-pointer border-primary py-3 bg-white\",\n  onClick: () => changeIsOpen(!isOpen),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Row, {\n  className: \"align-items-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Col, {\n  xs: 10,\n  className: \"font-weight-bold\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n}, title), /*#__PURE__*/React.createElement(Col, {\n  xs: 2,\n  className: \"d-flex justify-content-end align-items-center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(AiOutlineDown, {\n  className: \"ml-2 text-primary\",\n  fontSize: \"25px\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }\n}))));\n\nconst AccordionLog = ({\n  children,\n  title\n}) => {\n  const [isOpen, changeIsOpen] = useState(false);\n  useEffect(() => {\n    accordionOpeners.push(newState => changeIsOpen(newState));\n  }, [changeIsOpen]);\n  return /*#__PURE__*/React.createElement(Accordion, {\n    className: \"my-4\",\n    activeKey: isOpen ? '0' : '1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"border-primary injection\",\n    style: {\n      borderRadius: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToggleHeader, {\n    title: title,\n    changeIsOpen: changeIsOpen,\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\nconst Log = ({\n  children,\n  title\n}) => children ? /*#__PURE__*/React.createElement(AccordionLog, {\n  title: title,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }\n}, children) : /*#__PURE__*/React.createElement(SimpleLog, {\n  title: title,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }\n});\n\nexport default Log;","map":{"version":3,"sources":["/home/darrrks/WebstormProjects/test_proj/lol_front/src/components/EventLogs/Log.jsx"],"names":["React","useState","useEffect","Accordion","Card","Row","Col","AiOutlineDown","accordionOpeners","SimpleLog","title","borderRadius","overflow","ToggleHeader","changeIsOpen","isOpen","AccordionLog","children","push","newState","Log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Accordion, Card, Row, Col } from 'react-bootstrap';\nimport { AiOutlineDown } from 'react-icons/ai';\n\nimport { accordionOpeners } from './EventLogs';\n\nconst SimpleLog = ({ title }) => (\n  <Card\n    className=\"border-primary injection my-4\"\n    style={{ borderRadius: '1rem', overflow: 'hidden' }}\n  >\n    <Card.Header className=\"py-3 bg-white border-bottom-0\">\n      <Row className=\"align-items-center\">\n        <Col xs={12} className=\"font-weight-bold\">\n          {title}\n        </Col>\n      </Row>\n    </Card.Header>\n  </Card>\n);\n\nconst ToggleHeader = ({ title, changeIsOpen, isOpen }) => (\n  <Card.Header\n    className=\"cursor-pointer border-primary py-3 bg-white\"\n    onClick={() => changeIsOpen(!isOpen)}\n  >\n    <Row className=\"align-items-center\">\n      <Col xs={10} className=\"font-weight-bold\">\n        {title}\n      </Col>\n      <Col\n        xs={2}\n        className=\"d-flex justify-content-end align-items-center\"\n      >\n        <AiOutlineDown\n          className=\"ml-2 text-primary\"\n          fontSize=\"25px\"\n        />\n      </Col>\n    </Row>\n  </Card.Header>\n);\n\nconst AccordionLog = ({ children, title }) => {\n  const [isOpen, changeIsOpen] = useState(false);\n\n  useEffect(() => {\n    accordionOpeners.push((newState) => changeIsOpen(newState));\n  }, [changeIsOpen]);\n\n  return (\n    <Accordion className=\"my-4\" activeKey={isOpen ? '0' : '1'}>\n      <Card\n        className=\"border-primary injection\"\n        style={{ borderRadius: '1rem' }}\n      >\n        <ToggleHeader\n          title={title}\n          changeIsOpen={changeIsOpen}\n          isOpen={isOpen}\n        />\n        <Accordion.Collapse eventKey=\"0\">\n          {children}\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  );\n};\n\nconst Log = ({ children, title }) =>\n  children ? (\n    <AccordionLog title={title}>{children}</AccordionLog>\n  ) : (\n    <SimpleLog title={title} />\n  );\n\nexport default Log;\n"]},"metadata":{},"sourceType":"module"}