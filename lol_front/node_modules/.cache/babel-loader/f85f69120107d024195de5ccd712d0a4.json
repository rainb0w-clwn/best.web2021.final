{"ast":null,"code":"var _jsxFileName = \"/home/darrrks/WebstormProjects/test_proj/lol_front/src/components/EventLogs/EventLogs.jsx\";\nimport React, { useMemo, useState } from 'react';\nimport { Row, Col, Button, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\nimport { view, store } from '@risingstack/react-easy-state';\nimport { orderBy as _orderBy, reduce as _reduce } from 'lodash';\nimport { useStaticData } from '../StaticDataProvider';\nimport { gameStore } from '../GameStore';\nimport EventLogSwitch from './EventLogSwitch';\nimport PreparationsLog from './PreparationsLog';\nexport const accordionOpeners = store([]);\nexport const logTypes = {\n  Preparations: 'Preparations',\n  BudgetItem: 'Budget Item Purchase',\n  SystemRestore: 'System Restore Action',\n  CampaignAction: 'Campaign Action',\n  ThreatInjected: 'Threat Injected',\n  ThreatPrevented: 'Threat Prevented',\n  GameState: 'Game State Changed',\n  CurveballEvent: 'Curveball Event'\n};\nconst EventLogs = view(({\n  className,\n  asc = true\n}) => {\n  const {\n    logs: gameLogs,\n    injections: gameInjections\n  } = gameStore;\n  const {\n    injections\n  } = useStaticData();\n  const logs = useMemo(() => {\n    const preventedLogs = _reduce(gameInjections, (acc, {\n      injection_id,\n      prevented,\n      prevented_at\n    }) => {\n      if (prevented) {\n        acc.push({\n          type: 'Threat Prevented',\n          injection: injections[injection_id],\n          game_timer: prevented_at,\n          id: `injection_${injection_id}`\n        });\n      }\n\n      return acc;\n    }, []);\n\n    const injectionLogs = _reduce(gameInjections, (acc, gameInjection) => {\n      if (gameInjection.delivered) {\n        acc.push({\n          type: 'Threat Injected',\n          injection: injections[gameInjection.injection_id],\n          gameInjection,\n          game_timer: gameInjection.delivered_at,\n          id: `injection_${gameInjection.injection_id}`\n        });\n      }\n\n      return acc;\n    }, []);\n\n    return _orderBy([...preventedLogs, ...injectionLogs, ...gameLogs], 'game_timer', asc ? 'asc' : 'desc');\n  }, [gameInjections, injections, gameLogs, asc]);\n  const [filterValue, setFilterValue] = useState(Object.values(logTypes));\n  const filter = useMemo(() => filterValue.reduce((acc, logType) => ({ ...acc,\n    [logType]: true\n  }), {}), [filterValue]);\n  return /*#__PURE__*/React.createElement(Row, {\n    className: className,\n    id: \"logs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 4,\n    className: \"pr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"EVENTS LOG:\")), /*#__PURE__*/React.createElement(Col, {\n    xs: 2,\n    className: \"px-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-primary\",\n    className: \"rounded-pill w-100 d-flex justify-content-center\",\n    type: \"button\",\n    style: {\n      whiteSpace: 'nowrap'\n    },\n    onClick: () => setFilterValue(Object.values(logTypes)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"SHOW ALL\")), /*#__PURE__*/React.createElement(Col, {\n    xs: 2,\n    className: \"px-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-primary\",\n    className: \"rounded-pill w-100 d-flex justify-content-center\",\n    type: \"button\",\n    onClick: () => setFilterValue([]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"HIDE ALL\")), /*#__PURE__*/React.createElement(Col, {\n    xs: 2,\n    className: \"px-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-primary\",\n    className: \"rounded-pill w-100 d-flex justify-content-center\",\n    style: {\n      whiteSpace: 'nowrap'\n    },\n    type: \"button\",\n    onClick: () => accordionOpeners.forEach(openAccordion => openAccordion(false)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"CLOSE ALL\")), /*#__PURE__*/React.createElement(Col, {\n    xs: 2,\n    className: \"pl-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-primary\",\n    className: \"rounded-pill w-100 d-flex justify-content-center\",\n    style: {\n      whiteSpace: 'nowrap'\n    },\n    type: \"button\",\n    onClick: () => accordionOpeners.forEach(openAccordion => openAccordion(true)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"EXPAND ALL\")), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n    type: \"checkbox\",\n    value: filterValue,\n    onChange: setFilterValue,\n    className: \"d-flex log-filter\",\n    style: {\n      zIndex: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ToggleButton, {\n    value: logTypes.Preparations,\n    variant: \"outline-primary\",\n    className: \"p-1 d-flex align-items-center justify-content-center mr-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, logTypes.Preparations), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: logTypes.BudgetItem,\n    variant: \"outline-primary\",\n    className: \"p-1 d-flex align-items-center justify-content-center mr-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, logTypes.BudgetItem), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: logTypes.SystemRestore,\n    variant: \"outline-primary\",\n    className: \"p-1 d-flex align-items-center justify-content-center mr-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, logTypes.SystemRestore), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: logTypes.CampaignAction,\n    variant: \"outline-primary\",\n    className: \"p-1 d-flex align-items-center justify-content-center mr-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, logTypes.CampaignAction), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: logTypes.ThreatInjected,\n    variant: \"outline-primary\",\n    className: \"p-1 d-flex align-items-center justify-content-center mr-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, logTypes.ThreatInjected), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: logTypes.ThreatPrevented,\n    variant: \"outline-primary\",\n    className: \"p-1 d-flex align-items-center justify-content-center mr-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, logTypes.ThreatPrevented), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: logTypes.GameState,\n    variant: \"outline-primary\",\n    className: \"p-1 d-flex align-items-center justify-content-center mr-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, logTypes.GameState), /*#__PURE__*/React.createElement(ToggleButton, {\n    value: logTypes.CurveballEvent,\n    variant: \"outline-primary\",\n    className: \"p-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, logTypes.CurveballEvent))), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, filter[logTypes.Preparations] && asc && /*#__PURE__*/React.createElement(PreparationsLog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 50\n    }\n  }), logs.map(log => /*#__PURE__*/React.createElement(EventLogSwitch, {\n    log: log,\n    key: log.id,\n    filter: filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  })), filter[logTypes.Preparations] && !asc && /*#__PURE__*/React.createElement(PreparationsLog, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 51\n    }\n  })));\n});\nexport default EventLogs;","map":{"version":3,"sources":["/home/darrrks/WebstormProjects/test_proj/lol_front/src/components/EventLogs/EventLogs.jsx"],"names":["React","useMemo","useState","Row","Col","Button","ToggleButtonGroup","ToggleButton","view","store","orderBy","_orderBy","reduce","_reduce","useStaticData","gameStore","EventLogSwitch","PreparationsLog","accordionOpeners","logTypes","Preparations","BudgetItem","SystemRestore","CampaignAction","ThreatInjected","ThreatPrevented","GameState","CurveballEvent","EventLogs","className","asc","logs","gameLogs","injections","gameInjections","preventedLogs","acc","injection_id","prevented","prevented_at","push","type","injection","game_timer","id","injectionLogs","gameInjection","delivered","delivered_at","filterValue","setFilterValue","Object","values","filter","logType","whiteSpace","forEach","openAccordion","zIndex","map","log"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react';\nimport {\n  Row,\n  Col,\n  Button,\n  ToggleButtonGroup,\n  ToggleButton,\n} from 'react-bootstrap';\nimport { view, store } from '@risingstack/react-easy-state';\nimport { orderBy as _orderBy, reduce as _reduce } from 'lodash';\n\nimport { useStaticData } from '../StaticDataProvider';\nimport { gameStore } from '../GameStore';\nimport EventLogSwitch from './EventLogSwitch';\nimport PreparationsLog from './PreparationsLog';\n\nexport const accordionOpeners = store([]);\n\nexport const logTypes = {\n  Preparations: 'Preparations',\n  BudgetItem: 'Budget Item Purchase',\n  SystemRestore: 'System Restore Action',\n  CampaignAction: 'Campaign Action',\n  ThreatInjected: 'Threat Injected',\n  ThreatPrevented: 'Threat Prevented',\n  GameState: 'Game State Changed',\n  CurveballEvent: 'Curveball Event',\n};\n\nconst EventLogs = view(({ className, asc = true }) => {\n  const { logs: gameLogs, injections: gameInjections } = gameStore;\n  const { injections } = useStaticData();\n\n  const logs = useMemo(() => {\n    const preventedLogs = _reduce(\n      gameInjections,\n      (acc, { injection_id, prevented, prevented_at }) => {\n        if (prevented) {\n          acc.push({\n            type: 'Threat Prevented',\n            injection: injections[injection_id],\n            game_timer: prevented_at,\n            id: `injection_${injection_id}`,\n          });\n        }\n        return acc;\n      },\n      [],\n    );\n    const injectionLogs = _reduce(\n      gameInjections,\n      (acc, gameInjection) => {\n        if (gameInjection.delivered) {\n          acc.push({\n            type: 'Threat Injected',\n            injection: injections[gameInjection.injection_id],\n            gameInjection,\n            game_timer: gameInjection.delivered_at,\n            id: `injection_${gameInjection.injection_id}`,\n          });\n        }\n        return acc;\n      },\n      [],\n    );\n    return _orderBy(\n      [...preventedLogs, ...injectionLogs, ...gameLogs],\n      'game_timer',\n      asc ? 'asc' : 'desc',\n    );\n  }, [gameInjections, injections, gameLogs, asc]);\n\n  const [filterValue, setFilterValue] = useState(\n    Object.values(logTypes),\n  );\n  const filter = useMemo(\n    () =>\n      filterValue.reduce(\n        (acc, logType) => ({ ...acc, [logType]: true }),\n        {},\n      ),\n    [filterValue],\n  );\n\n  return (\n    <Row className={className} id=\"logs\">\n      <Col xs={4} className=\"pr-1\">\n        <h2 className=\"font-weight-bold\">EVENTS LOG:</h2>\n      </Col>\n      <Col xs={2} className=\"px-1\">\n        <Button\n          variant=\"outline-primary\"\n          className=\"rounded-pill w-100 d-flex justify-content-center\"\n          type=\"button\"\n          style={{ whiteSpace: 'nowrap' }}\n          onClick={() => setFilterValue(Object.values(logTypes))}\n        >\n          SHOW ALL\n        </Button>\n      </Col>\n      <Col xs={2} className=\"px-1\">\n        <Button\n          variant=\"outline-primary\"\n          className=\"rounded-pill w-100 d-flex justify-content-center\"\n          type=\"button\"\n          onClick={() => setFilterValue([])}\n        >\n          HIDE ALL\n        </Button>\n      </Col>\n      <Col xs={2} className=\"px-1\">\n        <Button\n          variant=\"outline-primary\"\n          className=\"rounded-pill w-100 d-flex justify-content-center\"\n          style={{ whiteSpace: 'nowrap' }}\n          type=\"button\"\n          onClick={() =>\n            accordionOpeners.forEach((openAccordion) =>\n              openAccordion(false),\n            )\n          }\n        >\n          CLOSE ALL\n        </Button>\n      </Col>\n      <Col xs={2} className=\"pl-1\">\n        <Button\n          variant=\"outline-primary\"\n          className=\"rounded-pill w-100 d-flex justify-content-center\"\n          style={{ whiteSpace: 'nowrap' }}\n          type=\"button\"\n          onClick={() =>\n            accordionOpeners.forEach((openAccordion) =>\n              openAccordion(true),\n            )\n          }\n        >\n          EXPAND ALL\n        </Button>\n      </Col>\n      <Col xs={12}>\n        <ToggleButtonGroup\n          type=\"checkbox\"\n          value={filterValue}\n          onChange={setFilterValue}\n          className=\"d-flex log-filter\"\n          style={{ zIndex: 0 }}\n        >\n          <ToggleButton\n            value={logTypes.Preparations}\n            variant=\"outline-primary\"\n            className=\"p-1 d-flex align-items-center justify-content-center mr-1 rounded\"\n          >\n            {logTypes.Preparations}\n          </ToggleButton>\n          <ToggleButton\n            value={logTypes.BudgetItem}\n            variant=\"outline-primary\"\n            className=\"p-1 d-flex align-items-center justify-content-center mr-1 rounded\"\n          >\n            {logTypes.BudgetItem}\n          </ToggleButton>\n          <ToggleButton\n            value={logTypes.SystemRestore}\n            variant=\"outline-primary\"\n            className=\"p-1 d-flex align-items-center justify-content-center mr-1 rounded\"\n          >\n            {logTypes.SystemRestore}\n          </ToggleButton>\n          <ToggleButton\n            value={logTypes.CampaignAction}\n            variant=\"outline-primary\"\n            className=\"p-1 d-flex align-items-center justify-content-center mr-1 rounded\"\n          >\n            {logTypes.CampaignAction}\n          </ToggleButton>\n          <ToggleButton\n            value={logTypes.ThreatInjected}\n            variant=\"outline-primary\"\n            className=\"p-1 d-flex align-items-center justify-content-center mr-1 rounded\"\n          >\n            {logTypes.ThreatInjected}\n          </ToggleButton>\n          <ToggleButton\n            value={logTypes.ThreatPrevented}\n            variant=\"outline-primary\"\n            className=\"p-1 d-flex align-items-center justify-content-center mr-1 rounded\"\n          >\n            {logTypes.ThreatPrevented}\n          </ToggleButton>\n          <ToggleButton\n            value={logTypes.GameState}\n            variant=\"outline-primary\"\n            className=\"p-1 d-flex align-items-center justify-content-center mr-1 rounded\"\n          >\n            {logTypes.GameState}\n          </ToggleButton>\n          <ToggleButton\n            value={logTypes.CurveballEvent}\n            variant=\"outline-primary\"\n            className=\"p-1 rounded\"\n          >\n            {logTypes.CurveballEvent}\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Col>\n      <Col xs={12}>\n        {filter[logTypes.Preparations] && asc && <PreparationsLog />}\n        {logs.map((log) => (\n          <EventLogSwitch log={log} key={log.id} filter={filter} />\n        ))}\n        {filter[logTypes.Preparations] && !asc && <PreparationsLog />}\n      </Col>\n    </Row>\n  );\n});\n\nexport default EventLogs;\n"]},"metadata":{},"sourceType":"module"}